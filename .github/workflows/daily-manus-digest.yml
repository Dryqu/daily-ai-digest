name: Daily Manus Digest to HTML

on:
  schedule:
    - cron: '15 22 * * *'  # 5:15 PM Eastern during Standard Time (UTC-5)
    - cron: '15 21 * * *'  # 5:15 PM Eastern during Daylight Time (UTC-4)
  workflow_dispatch:

permissions:
  contents: write

jobs:
  fetch-and-store:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set today's UTC date env
        run: echo "TODAY=$(date -u +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Ensure tools and directories
        run: |
          sudo apt-get update -y
          sudo apt-get install -y jq
          mkdir -p posts

      - name: Fetch latest Manus output and save to file (with backoff)
        env:
          MANUS_API_KEY: ${{ secrets.MANUS_API_KEY }}
        run: |
          set -euo pipefail

          fetch_list() {
            for attempt in 1 2 3; do
              echo "Listing outputs (attempt $attempt)â€¦"
              CODE=$(curl -sS -D /tmp/h.txt -o /tmp/list.json \
                -H "Authorization: Bearer $MANUS_API_KEY" \
                -H "Accept: application/json" \
                "https://api.manus.ai/v1/outputs?limit=1" \
                -w "%{http_code}" || echo "000")
              echo "HTTP $CODE"
              if [ "$CODE" = "200" ]; then return 0; fi
              if [ "$CODE" = "429" ] || [[ "$CODE" =~ ^5 ]]; then
                SLEEP=$(awk -F': ' 'tolower($1)=="retry-after"{print $2}' /tmp/h.txt | tr -d '\r' || true)
                SLEEP=${SLEEP:-$(( 15 * attempt ))}
                echo "Backoff ${SLEEP}sâ€¦"; sleep "$SLEEP"; continue
              fi
              echo "Unexpected status $CODE"; cat /tmp/list.json || true
              return 1
            done
            echo "Gave up after retries."; cat /tmp/list.json || true
            return 1
          }

          fetch_list

          OUTPUT_ID=$(jq -r '.data[0].id // empty' < /tmp/list.json)
          if [ -z "$OUTPUT_ID" ]; then
            echo "No Manus outputs found (or API shape unexpected)."
            echo "Response was:"; cat /tmp/list.json || true
            exit 1
          fi

          echo "Latest OUTPUT_ID: $OUTPUT_ID"

          # Try .ai then .run host in case your account uses the alternate domain
          for URL in \
            "https://api.manus.ai/v1/outputs/$OUTPUT_ID" \
            "https://api.manus.run/v1/outputs/$OUTPUT_ID"
          do
            echo "Downloading $URL"
            CODE=$(curl -sS -o "posts/${TODAY}-ai-digest.html" -H "Authorization: Bearer $MANUS_API_KEY" "$URL" -w "%{http_code}" -D /tmp/h2.txt || echo "000")
            [ "$CODE" = "200" ] && break
          done

          if [ ! -s "posts/${TODAY}-ai-digest.html" ]; then
            echo "Downloaded file is empty â€” failing the job."
            exit 1
          fi

      - name: Update archive.html
        run: |
          LINE="<li><a href='posts/${TODAY}-ai-digest.html'>${TODAY}</a></li>"
          touch archive.html
          grep -qxF "$LINE" archive.html || echo "$LINE" >> archive.html

      - name: Commit and push
        run: |
          git config --global user.name 'AI Digest Bot'
          git config --global user.email 'aibot@example.com'
          git add "posts/${TODAY}-ai-digest.html" archive.html
          git commit -m "ðŸ“¥ Add AI Digest for ${TODAY}" || echo "No changes to commit"
          git push
